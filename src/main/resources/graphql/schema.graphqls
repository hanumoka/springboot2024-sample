type Subscription {
    newBoardPost: BoardEntity
}

type Mutation {
    createBoardPost(authorId: Int!, title: String!, content: String!): BoardEntity!
}


type Query {
    getBoards: [BoardEntity!]!
    getBoardsConnection(first: Int, after: String): BoardConnection!
}

type BoardEntity {
    id: ID!
    title: String!
    content: String!
    author: AccountEntity
}

type AccountEntity {
    id: ID!
    username: String!
    name: String!
}

type BoardConnection {
    edge: [BoardEdge!]!
    pageInfo: PageInfo!
}


type BoardEdge {
    node: BoardEntity!
    cursor: String!
}

type PageInfo {
    hasNextPage: Boolean!
    endCursor: String
}


